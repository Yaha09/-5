
#   Задание: Написать функцию, которая принимает аргумент “имя человека“ 
#   в виде строки (вы можете добавить и другие аргументы по своему усмотрению), и возвращает его номер телефона.
#   В случае, если такого человека в справочнике нет, функция возвращает строку "undefined".
#   Вызвать функцию для нескольких различных имен, обязательно для имени, которого в словаре-справочнике нет.

#         Дополнительное задание:
# Подумать о "чистоте" и эффективности функции. Как функция получает доступ к словарю-справочнику?
# Выберите наилучший вариант:
# Словарь-справочник создается и хранится внутри функции
# Словарь-справочник это глобальный объект (переменная), внутри функции мы обращаемся к ней
# Словарь-справочник это глобальный объект (переменная), которая передается в функцию как параметр.


from time import perf_counter
guide = {
"Иван": "3916", "Катя": "1298", "Лена": "0010",
"Саша": "2116", "Миша": "3458", "Маша": "5010",
"Таня": "3346", "Вася": "4296", "Рома": "0010"
}



def search1(name):           # Словарь-справочник создается и хранится внутри функции
    guide_copy = guide
    if name not in guide_copy:  # проверка наличия ключа в словаре
        return "undefined"
    return guide_copy[name]



def search2():              # Словарь-справочник это глобальный объект (переменная), внутри функции мы обращаемся к ней
    if NaMe not in guide:  
        return "undefined"
    return guide[NaMe]

def search3(name):          # Словарь-справочник это глобальный объект (переменная), которая передается в функцию как параметр.
    if name not in guide:  
        return "undefined"
    return guide[name]


def transform(func):                        
    def new_func(*args, **kwargs):
        t1 = perf_counter()
        rez = func(*args, **kwargs)
        t2 = perf_counter()
        print('номер', rez ,'время' ,t2-t1)
        return rez
    return new_func



#NaMe = 'Катя'

f1 = transform(search1)
f2 = transform(search2)
f3 = transform(search3)

for NaMe in ["Миша","Маша","Катя","Таня", "Вася", "Рома", "None"]:
    print(NaMe)
    f1(NaMe)
    f2()
    f3(NaMe)




